---
layout: firmware
title: chipKIT-based OpenXC Vehicle Interface Firmware
---

<div class="page-header">
    <h1>Flashing Firmware to your chipKIT Vehicle Interface</h1>
</div>

Note: Before you can flash your VI with firmware, you need to obtain a pre-compiled binary file for your specific
vehicle model. You can find a list of supported vehicles [here][supported-vehicles].



## Windows
-------

1. If you haven't already, install [Cygwin](http://www.cygwin.com) and in the installer, select the
   following packages: ``git, curl, libsasl2, ca-certificates, patchutils``

2. Start a Cygwin Terminal.
3. Configure the terminal to ignore Windows-style line endings in scripts:

        $ echo "set -o igncr && export SHELLOPTS" >> ~/.bashrc && source ~/.bashrc
        
4. Continue to the [All Platforms](#all-platforms) section.

## OS X
--------

If you already have Git installed, you can skip ahead to the [All Platforms](#all-platforms) section

1. Open the Terminal app.
2. Install [Homebrew](http://mxcl.github.com/homebrew/):
   ``ruby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)"``
3. Install Git with Homebrew: ``brew install git``.
4. Continue to the [All Platforms](#all-platforms) section.

## Linux
-----

1. Install Git from your distribution's package manager.

   Ubuntu:


        $ sudo apt-get install git

   Arch Linux:


        $ [sudo] pacman -S git

2. Continue to the [All Platforms](#all-platforms) section.


## All Platforms<a name="all-platforms" />
-------------

1. If your network uses an Internet proxy (e.g. a corporate network) set the
   ``http_proxy`` and ``https_proxy`` environment variables:

        $ export http_proxy=<your proxy>
        $ export https_proxy=<your proxy>

2. Clone the [vi-firmware](https://github.com/openxc/vi-firmware)
   repository using git:

        $ git clone https://github.com/openxc/vi-firmware

3. Plug your Vehicle Interface into your computer using a **Mini-USB** connection,
*not* the micro-USB connection you use to transfer vehicle data.

4. Run the ''upload_hex.sh'' script from the ''vi-firmware'' directory, passing it the file
path to the .hex/.bin firmware file you obtained.

        $ cd vi-firmware
        $ script/upload_hex.sh <firmware file>.hex
        
The script attempts to install all required dependencies automatically. If you run into problems,
or are running an operating system not listed above, you may need to install the dependencies manually. 
For instructions on how to install the dependencies manually, as well as how to address some common
errors, see the [troubleshooting][troubleshooting] section for more information.

<div class="page-header">
<h2>Next Steps</h2>
</div>

Once you've flashed the firmware using the script, it's time to test your Vehicle Interface. 
You can use the [OpenXC Python Library][python-test] to run a quick smoke test to verify the firmware flashed
successfully.


[python-test]: http://www.openxcplatform.com/python/getting-started.html
[troubleshooting]: /firmware/troubleshooting.html
[supported-vehicles]: http://www.openxcplatform.com/hardware/vehicles.html